apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
      - name: {{ .Values.appName }}
        image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: {{ .Values.port }}

        envFrom:
        - configMapRef:
            name: {{ .Values.appName }}

        volumeMounts:
        - mountPath: {{ .Values.volumes.dbStorage.path }}
          name: db-storage

        readinessProbe:
          exec:
            command:
              - mongosh
              - --quiet
              - --eval
              - db.adminCommand("ping")
          initialDelaySeconds: 3
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 5

        livenessProbe:
          exec:
            command:
              - mongosh
              - --quiet
              - --eval
              - db.adminCommand("ping")
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5

      volumes:
      - name: db-storage
        persistentVolumeClaim:
          claimName: {{ .Values.appName }}