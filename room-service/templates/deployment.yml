apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicas }}

  selector:
    matchLabels:
      app: {{ .Values.appName }}

  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
      - name: {{ .Values.appName }}
        image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: {{ .Values.port }}

        envFrom:
        - configMapRef:
            name: {{ .Values.appName }}

        volumeMounts:
        - name: jwt-keys
          mountPath: /app/keys
          readOnly: true
        - name: nginx-storage
          mountPath: {{ .Values.volumes.nginxImageStorage.path }}

        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.port }}
          initialDelaySeconds: 3
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 5

        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.port }}
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5

      volumes:
      - name: jwt-keys
        secret:
          secretName: "{{ .Values.appName }}-jwt-keys"
      - name: nginx-storage
        persistentVolumeClaim:
          claimName: {{ .Values.volumes.nginxImageStorage.pvcName }}